"use strict";(self.webpackChunkhandbook=self.webpackChunkhandbook||[]).push([[53],{1109:i=>{i.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"about":[{"type":"link","label":"Introduction","href":"/handbook/about/","docId":"about/index"},{"type":"link","label":"Things we\'re interested in","href":"/handbook/about/things-were-interested-in","docId":"about/things-were-interested-in"},{"type":"link","label":"Implementations","href":"/handbook/about/implementations","docId":"about/implementations"},{"type":"link","label":"Specification","href":"/handbook/about/specification","docId":"about/specification"},{"type":"link","label":"Roadmap","href":"/handbook/about/roadmap","docId":"about/roadmap"},{"type":"link","label":"Contribute","href":"/handbook/about/contribute","docId":"about/contribute"},{"type":"link","label":"History","href":"/handbook/about/history","docId":"about/history"}],"learn":[{"type":"link","label":"Overview","href":"/handbook/learn/","docId":"learn/index"},{"type":"link","label":"Entries","href":"/handbook/learn/entries","docId":"learn/entries"},{"type":"link","label":"Operations","href":"/handbook/learn/operations","docId":"learn/operations"}],"specification":[{"type":"link","label":"Table of Contents","href":"/handbook/specification/","docId":"specification/index"},{"type":"link","label":"Introduction","href":"/handbook/specification/introduction","docId":"specification/introduction"},{"type":"link","label":"Key Concepts","href":"/handbook/specification/key-concepts","docId":"specification/key-concepts"},{"type":"link","label":"Encoding","href":"/handbook/specification/encoding-data","docId":"specification/encoding-data"},{"type":"category","label":"Core data types","items":[{"type":"link","label":"Bamboo","href":"/handbook/specification/data-types/bamboo","docId":"specification/data-types/bamboo"},{"type":"link","label":"Key Pairs","href":"/handbook/specification/data-types/key-pairs","docId":"specification/data-types/key-pairs"},{"type":"link","label":"Operations","href":"/handbook/specification/data-types/operations","docId":"specification/data-types/operations"},{"type":"link","label":"Schemas","href":"/handbook/specification/data-types/schemas","docId":"specification/data-types/schemas"},{"type":"link","label":"Documents","href":"/handbook/specification/data-types/documents","docId":"specification/data-types/documents"},{"type":"link","label":"Document views","href":"/handbook/specification/data-types/document-views","docId":"specification/data-types/document-views"}],"collapsed":true,"collapsible":true},{"type":"link","label":"Authorisation","href":"/handbook/specification/authorisation","docId":"specification/authorisation"},{"type":"link","label":"Encryption","href":"/handbook/specification/encryption","docId":"specification/encryption"},{"type":"category","label":"APIs","items":[{"type":"link","label":"Overview","href":"/handbook/specification/APIs/apis-overview","docId":"specification/APIs/apis-overview"},{"type":"link","label":"Publishing","href":"/handbook/specification/APIs/publishing","docId":"specification/APIs/publishing"},{"type":"link","label":"Queries","href":"/handbook/specification/APIs/queries","docId":"specification/APIs/queries"},{"type":"link","label":"Replication","href":"/handbook/specification/APIs/replication","docId":"specification/APIs/replication"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Networking","items":[{"type":"link","label":"Clients and nodes","href":"/handbook/specification/networking/clients-nodes","docId":"specification/networking/clients-nodes"},{"type":"link","label":"Discovery","href":"/handbook/specification/networking/discovery","docId":"specification/networking/discovery"},{"type":"link","label":"Replication Protocol","href":"/handbook/specification/networking/replication-protocol","docId":"specification/networking/replication-protocol"}],"collapsed":true,"collapsible":true}]},"docs":{"about/contribute":{"id":"about/contribute","title":"Contribute","description":"How to contribute","sidebar":"about"},"about/history":{"id":"about/history","title":"History","description":"- history of the project","sidebar":"about"},"about/implementations":{"id":"about/implementations","title":"Implementations","description":"- we have built p2panda-rs, a Rust implementation of the p2panda specification","sidebar":"about"},"about/index":{"id":"about/index","title":"Introduction","description":"- here you can find out","sidebar":"about"},"about/roadmap":{"id":"about/roadmap","title":"Roadmap","description":"- this is a roadmap for the whole project","sidebar":"about"},"about/specification":{"id":"about/specification","title":"Specification","description":"- the p2panda specification describes the protocol and the interfaces required to be implemented","sidebar":"about"},"about/things-were-interested-in":{"id":"about/things-were-interested-in","title":"Things we\'re interested in","description":"Previous ideas:","sidebar":"about"},"faq":{"id":"faq","title":"FAQ","description":"Can I use p2panda already?"},"learn/entries":{"id":"learn/entries","title":"Entries","description":"Trust is funny","sidebar":"learn"},"learn/index":{"id":"learn/index","title":"Overview","description":"","sidebar":"learn"},"learn/operations":{"id":"learn/operations","title":"Operations","description":"","sidebar":"learn"},"libraries/index":{"id":"libraries/index","title":"Libraries","description":"p2panda"},"links":{"id":"links","title":"Links","description":"<Links links={["},"specification/APIs/apis-overview":{"id":"specification/APIs/apis-overview","title":"Overview","description":"- clients send queries to nodes in order to publish new entries and query materialised documents","sidebar":"specification"},"specification/APIs/publishing":{"id":"specification/APIs/publishing","title":"Publishing","description":"- clients use two GraphQL operations for publishing entries:","sidebar":"specification"},"specification/APIs/queries":{"id":"specification/APIs/queries","title":"Queries","description":"- The GraphQL schema of a node changes depending on the schemas that are available on the node.","sidebar":"specification"},"specification/APIs/replication":{"id":"specification/APIs/replication","title":"Replication","description":"- this api consists of GraphQL queries for other nodes to ask about the state of bamboo logs, entries and payloads","sidebar":"specification"},"specification/authorisation":{"id":"specification/authorisation","title":"Authorisation","description":"The key_group schema is a way to group a set of public keys so that they can act as a single identity. Every member key can have different permissions limiting the extent to which they can publish operations as this single identity. Keys can only be added to a key group with a confirmation from both the key itself and an existing member key with the according permissions. Key groups can also be extended with other key groups, which extends the set of keys in the former with those from the latter. Key groups can serve as a building block for many other concepts in p2panda including identity (handles/usernames), multi-device usage, permissions and moderation.","sidebar":"specification"},"specification/data-types/bamboo":{"id":"specification/data-types/bamboo","title":"Bamboo","description":"- requirements in this section refer only to how p2panda specifies use of bamboo.","sidebar":"specification"},"specification/data-types/document-views":{"id":"specification/data-types/document-views","title":"Document views","description":"- document views represent the immutable state of a document at a particular point in its history of edits","sidebar":"specification"},"specification/data-types/documents":{"id":"specification/data-types/documents","title":"Documents","description":"- A Document is a high-level mutable, multi-writer data type constructed from a linked graph of operations.","sidebar":"specification"},"specification/data-types/key-pairs":{"id":"specification/data-types/key-pairs","title":"Key Pairs","description":"Clients MUST use Ed25519 as the Digital Signature Algorithm for Bamboo.","sidebar":"specification"},"specification/data-types/operations":{"id":"specification/data-types/operations","title":"Operations","description":"- Operations represent atomic data changes.","sidebar":"specification"},"specification/data-types/schemas":{"id":"specification/data-types/schemas","title":"Schemas","description":"- schemas are used to describe and validate the format in which data is published","sidebar":"specification"},"specification/documents-and-schema":{"id":"specification/documents-and-schema","title":"Documents & Schema","description":"Documents"},"specification/encoding-data":{"id":"specification/encoding-data","title":"Encoding","description":"- p2panda requires a canonical encoding format to guarantee that hashing a value produces the same result across all implementations.","sidebar":"specification"},"specification/encryption":{"id":"specification/encryption","title":"Encryption","description":"p2panda uses the MLS (Messaging Layer Security) protocol for group key negotiation to establish secrets in a large group of users.","sidebar":"specification"},"specification/index":{"id":"specification/index","title":"Table of Contents","description":"1. Table of contents","sidebar":"specification"},"specification/introduction":{"id":"specification/introduction","title":"Introduction","description":"p2panda is a peer-to-peer protocol and event-driven data store for secure, energy-efficient and local-first applications. It can be used in both fully distributed and federated network topologies, offers encryption (via MLS), multi-writer editing and data schemas. The specification is compatible with being implemented in both native and web applications. The protocol is based on the Bamboo append-only log that supports transitive partial replication and local deletion.","sidebar":"specification"},"specification/key-concepts":{"id":"specification/key-concepts","title":"Key Concepts","description":"This is a short introduction into some of the higher level concepts which build on top of the core p2panda data types. You can dive deeper into any of these topics by visiting the relevent specification pages. Hopefully this gives you an introductory overview which will help contextualise the details later.","sidebar":"specification"},"specification/networking/clients-nodes":{"id":"specification/networking/clients-nodes","title":"Clients and nodes","description":"- p2panda has a clear separation of clients and nodes to allow flexible setups and make client development easier","sidebar":"specification"},"specification/networking/discovery":{"id":"specification/networking/discovery","title":"Discovery","description":"Discovery is in specification phase and has not been implemented yet.","sidebar":"specification"},"specification/networking/replication-protocol":{"id":"specification/networking/replication-protocol","title":"Replication Protocol","description":"- replication is the process by which nodes exchange entries and operations to eventually converge all to the same state","sidebar":"specification"},"tutorials/index":{"id":"tutorials/index","title":"Tutorials","description":""}}}')}}]);