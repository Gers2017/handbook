"use strict";(self.webpackChunkhandbook=self.webpackChunkhandbook||[]).push([[501],{4137:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>m});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(a),m=i,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||r;return a?n.createElement(f,o(o({ref:t},c),{},{components:a})):n.createElement(f,o({ref:t},c))}));function m(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},284:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var n=a(7462),i=(a(7294),a(4137));const r={id:"clients-nodes",title:"Clients and nodes"},o=void 0,l={unversionedId:"specification/networking/clients-nodes",id:"specification/networking/clients-nodes",title:"Clients and nodes",description:"- p2panda has a clear separation of clients and nodes to allow flexible setups and make client development easier",source:"@site/docs/specification/networking/clients-nodes.md",sourceDirName:"specification/networking",slug:"/specification/networking/clients-nodes",permalink:"/handbook/specification/networking/clients-nodes",draft:!1,tags:[],version:"current",frontMatter:{id:"clients-nodes",title:"Clients and nodes"},sidebar:"specification",previous:{title:"Replication",permalink:"/handbook/specification/APIs/replication"},next:{title:"Discovery",permalink:"/handbook/specification/networking/discovery"}},s={},p=[{value:"Nodes",id:"nodes",level:2},{value:"Clients",id:"clients",level:2}],c={toc:p};function u(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"p2panda has a clear separation of clients and nodes to allow flexible setups and make client development easier",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"nodes do the heavy lifting, they exist to allow clients to be lightweight, easier to implement and potentially running in a browser"))),(0,i.kt)("li",{parentName:"ul"},"client and node can be integrated in a single software package or run separate from each other - even on different machines",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"one way to integrate node and client is as a ",(0,i.kt)("a",{parentName:"li",href:"https://tauri.studio/"},"Tauri")," application, something that is supported by ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/p2panda/aquadoggo"},"aquadoggo")))),(0,i.kt)("li",{parentName:"ul"},"both nodes and clients are built on the same ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/p2panda/p2panda"},"p2panda")," library that defines shared data structures"),(0,i.kt)("li",{parentName:"ul"},"every key pair is bound to exactly one client and exactly one node",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"a key pair MUST NOT publish data through any client other than the one it was created with"),(0,i.kt)("li",{parentName:"ul"},"a key pair MUST NOT publish data on any node other than the one it was first used with"),(0,i.kt)("li",{parentName:"ul"},"disregard of this rule carries the risk of creating forks within a public key's logs. see ",(0,i.kt)("a",{parentName:"li",href:"/specification/core-concepts/permissions"},"Key Groups")," for a way to publish data from multiple devices without copying a private key or changing the node used.")))),(0,i.kt)("h2",{id:"nodes"},"Nodes"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"nodes are computer programs that",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"awaits signed operations from clients"),(0,i.kt)("li",{parentName:"ul"},"verifies the consistency, format and signature of operations and rejects invalid ones"),(0,i.kt)("li",{parentName:"ul"},"stores operations of the network in a database"),(0,i.kt)("li",{parentName:"ul"},"materializes document views on top of the known operations"),(0,i.kt)("li",{parentName:"ul"},"answers filterable and paginated data queries"),(0,i.kt)("li",{parentName:"ul"},"discovers other nodes in local network and internet"),(0,i.kt)("li",{parentName:"ul"},"replicates data with other nodes"))),(0,i.kt)("li",{parentName:"ul"},"a node can run in different settings which allows it to work offline or online",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"inside an application on the user's computer",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"a dedicated node for only this particular client"),(0,i.kt)("li",{parentName:"ul"},"this allows running a node as a backend, while the frontend can be a web-view, realized with ",(0,i.kt)("a",{parentName:"li",href:"https://tauri.studio/"},"Tauri")))),(0,i.kt)("li",{parentName:"ul"},"on a dedicated server which is always online",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"this allows using p2panda from a browser without installing software"),(0,i.kt)("li",{parentName:"ul"},"a node hosted online can be used by many clients (federation)"))),(0,i.kt)("li",{parentName:"ul"},"as a daemon on a user's computer",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"multiple p2panda clients could talk to one node on the same computer"))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/p2panda/aquadoggo"},"aquadoggo")," is the reference node implementation"),(0,i.kt)("li",{parentName:"ul"},"nodes offer a GraphQL API that is used by ",(0,i.kt)("a",{parentName:"li",href:"/specification/APIs/queries"},"clients")," and other ",(0,i.kt)("a",{parentName:"li",href:"/specification/APIs/replication"},"nodes")," to connect and exchange data")),(0,i.kt)("h2",{id:"clients"},"Clients"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"clients are computer programs that use the p2panda library to",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"create key pairs"),(0,i.kt)("li",{parentName:"ul"},"sign and encode new data and send it to a node"),(0,i.kt)("li",{parentName:"ul"},"query a node for existing data to make it available to its users"))),(0,i.kt)("li",{parentName:"ul"},"clients create key pairs for their users and never transfer private keys out",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"only clients have access to users' private keys"))),(0,i.kt)("li",{parentName:"ul"},"have a look at the ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/p2panda/beep-boop"},"beep-boop")," chat demo for an example of a client")))}u.isMDXComponent=!0}}]);