"use strict";(self.webpackChunkhandbook=self.webpackChunkhandbook||[]).push([[133],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=p(n),m=o,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(f,c(c({ref:t},l),{},{components:n})):r.createElement(f,c({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,c=new Array(a);c[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var p=2;p<a;p++)c[p]=n[p];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3431:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={id:"documents-and-schema",title:"Documents & Schema"},c=void 0,i={unversionedId:"specification/core-concepts/documents-and-schema",id:"specification/core-concepts/documents-and-schema",title:"Documents & Schema",description:"Documents",source:"@site/docs/specification/core-concepts/documents-and-schema.md",sourceDirName:"specification/core-concepts",slug:"/specification/core-concepts/documents-and-schema",permalink:"/handbook/specification/core-concepts/documents-and-schema",draft:!1,tags:[],version:"current",frontMatter:{id:"documents-and-schema",title:"Documents & Schema"},sidebar:"specification",previous:{title:"Authors",permalink:"/handbook/specification/core-concepts/authors"},next:{title:"Encryption",permalink:"/handbook/specification/core-concepts/encryption"}},s={},p=[{value:"Documents",id:"documents",level:2},{value:"Schema",id:"schema",level:2}],l={toc:p};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"documents"},"Documents"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/specification/data-types/documents"},"Documents")," are mutable data items which live on a p2panda network. Authors can create, update and delete documents. A document might be a blog post, a wiki page, a chat message, a user account, a configuration setting, a game board. They are multi-writer capable and have in-built properties which deterministically reslove confilicting writes."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/specification/networking/clients-nodes"},"Nodes")," are responsible for persisting documents and offering them on a public API so they can be queried by clients. They also offer the public API for all write actions relating to documents."),(0,o.kt)("p",null,"Documents can be assigned to an identity, giving them a concept of ",(0,o.kt)("a",{parentName:"p",href:"/specification/core-concepts/permissions"},"permissions"),", with the ability to add and remove other identities over the life of a document. ",(0,o.kt)("a",{parentName:"p",href:"/specification/core-concepts/encryption"},"Encryption")," is available via the use of ",(0,o.kt)("inlineCode",{parentName:"p"},"MLS")," encryption."),(0,o.kt)("h2",{id:"schema"},"Schema"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/specification/data-types/schemas"},"Schema")," specify the fields and values a document contains. When a document is published or updated, the request must be checked against the claimed schema. If it doesn't pass validation then the request will be rejected. This ensures all data on a p2panda network strictly follows a known schema. An application developer would publish their own schema based on the data required for their needs, or they could re-use schema already existing on their network."))}u.isMDXComponent=!0}}]);