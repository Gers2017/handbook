"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8751],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=a,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||i;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3401:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],s={sidebar_position:3},c="Data Persistence",l={unversionedId:"organising-data/persistence",id:"organising-data/persistence",isDocsHomePage:!1,title:"Data Persistence",description:"- data is persisted by storing entries, documents and instances",source:"@site/docs/02-organising-data/persistence.md",sourceDirName:"02-organising-data",slug:"/organising-data/persistence",permalink:"/handbook/docs/organising-data/persistence",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/02-organising-data/persistence.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Reduction",permalink:"/handbook/docs/organising-data/reduction"},next:{title:"Queries",permalink:"/handbook/docs/organising-data/queries"}},u=[{value:"Instance Serialisation",id:"instance-serialisation",children:[],level:2}],p={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"data-persistence"},"Data Persistence"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"data is persisted by storing ",(0,i.kt)("em",{parentName:"li"},"entries"),", ",(0,i.kt)("em",{parentName:"li"},"documents")," and ",(0,i.kt)("em",{parentName:"li"},"instances")),(0,i.kt)("li",{parentName:"ul"},"entries may be persisted when they are published or ",(0,i.kt)("a",{parentName:"li",href:"/docs/networking/replication"},"received")," from the network"),(0,i.kt)("li",{parentName:"ul"},"documents may be persisted by recording information alongside stored entries that allows retrieving them by the document they belong to"),(0,i.kt)("li",{parentName:"ul"},"instances may be persisted by serialising the instance's fields")),(0,i.kt)("h2",{id:"instance-serialisation"},"Instance Serialisation"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"for storing instances in a database, a table is created for every schema that should be persisted",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"the table name may be constructed from the instance's schema name and a unique identifier for the schema's version (e.g. the ",(0,i.kt)("em",{parentName:"li"},"instance id")," of the corresponding ",(0,i.kt)("a",{parentName:"li",href:"/docs/writing-data/schemas"},(0,i.kt)("em",{parentName:"a"},"metaschema"))," instance)"),(0,i.kt)("li",{parentName:"ul"},"the table should have a column for every field in the schema's definition"),(0,i.kt)("li",{parentName:"ul"},"the table should have a column to record the ",(0,i.kt)("em",{parentName:"li"},"document id")," and ",(0,i.kt)("em",{parentName:"li"},"instance id")," of every row"))),(0,i.kt)("li",{parentName:"ul"},"for every instance to persist",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"a row is inserted into the table for that instance's schema"))),(0,i.kt)("li",{parentName:"ul"},"a different procedure must be followed for some ",(0,i.kt)("em",{parentName:"li"},"system schemas"))))}d.isMDXComponent=!0}}]);